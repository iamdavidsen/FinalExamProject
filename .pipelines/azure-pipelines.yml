trigger:
  branches:
    include:
    - main
    - releases/*

variables:
  buildConfiguration: Release
  artifactName: WebApp
  artifactSqlName: SQLScript

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: BUILD_TEST_PACK
    displayName: 'Build + Test + Pack'
    jobs:
      - job:
        displayName: 'Build + Test + Pack'
        steps:
          - template: ./templates/versioning.yml

          - task: NodeTool@0
            displayName: 'Install Node 16.x'
            inputs:
              versionSpec: '16.x'

          - task: Npm@1
            displayName: 'Install packages'
            inputs:
              command: 'install'
              workingDir: 'KDBS'
              
          - task: UseDotNet@2
            displayName: 'Install .NET 5.X'
            inputs:
              packageType: 'sdk'
              version: '5.x'

          - template: ./templates/codestyle.yml

          - task: DotNetCoreCLI@2
            displayName: '.NET Restore'
            inputs:
              command: 'restore'
              projects: '**/*.sln'
              restoreArguments: '/property:Configuration=$(buildConfiguration)'
              feedsToUse: 'select'
              vstsFeed: 'ff228801-a7a1-470f-a6d3-d30a0101f187'
              verbosityRestore: 'Normal'

          - task: DotNetCoreCLI@2
            displayName: '.NET Build'
            inputs:
              command: 'build'
              projects: '**/*.sln'
              arguments: '--configuration $(buildConfiguration) -p:Version=$(GitVersion.AssemblySemFileVer) --no-restore --verbosity normal'

          # - script: |
          #     az login --service-principal --username $(AzureAppId) --password $(AzurePassword) --tenant $(AzureTenant)
          #   displayName: "Azure Login"

          - template: ./templates/testcoverage.yml

          - task: DotNetCoreCLI@2
            displayName: '.NET Publish'
            inputs:
              command: 'publish'
              publishWebProjects: false
              projects: '**/KDBS.csproj'
              arguments: '--no-restore --no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: false

          - task: PublishPipelineArtifact@1
            displayName: 'Publish WebApp Artifact'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifact: $(artifactName)
              publishLocation: 'pipeline'

          - template: ./templates/eftools.yml
            parameters:
              projectFolder: 'KDBS'

          - task: PublishPipelineArtifact@1
            displayName: 'Publish SQLScript Artifact'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)/SQL'
              artifact: $(artifactSqlName)
              publishLocation: 'pipeline'

  - stage: DEPLOY
    displayName: 'Deploy'
    dependsOn: BUILD_TEST_PACK
    jobs:
      - deployment:
        displayName: 'Deploy to Azure'
        pool:
          vmImage: 'windows-latest'
        environment: Production
        strategy:
          runOnce:
            preDeploy:
              steps:
                - download: current
                  artifact: $(artifactSqlName)

                - task: SqlAzureDacpacDeployment@1
                  displayName: 'Prepare Database'
                  inputs:
                    azureSubscription: 'Visual Studio Enterprise Subscription(96e9aea4-6eee-4d4c-b8e3-d1c1831dd15f)'
                    AuthenticationType: 'server'
                    ServerName: 'jkrd.database.windows.net'
                    DatabaseName: 'JKRD'
                    SqlUsername: '$(Username)'
                    SqlPassword: '$(Password)'
                    deployType: 'SqlTask'
                    SqlFile: '$(Pipeline.Workspace)/$(artifactSqlName)/migration.sql'
                    IpDetectionMethod: 'AutoDetect'

            deploy:
              steps:
                - download: current
                  artifact: $(artifactName)

                - task: AzureRmWebAppDeployment@4
                  displayName: 'Deploy Web App'
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'Visual Studio Enterprise Subscription(96e9aea4-6eee-4d4c-b8e3-d1c1831dd15f)'
                    appType: 'webApp'
                    WebAppName: 'JKRD'
                    packageForLinux: '$(Pipeline.Workspace)/$(artifactName)/KDBS'